package sqli

import(
	"sec/util/database"
	"net/http"
	"fmt"
)


type User struct{
	Id int `json:"id"`
	Name string `json:"name"`
}

func UnsafeGetData(r *http.Request)([]User, error){
	db, err := database.Connect()
	if err != nil{
		return nil,err
	}
	defer db.Close()
	//get data from clien
	uid := r.URL.Query().Get("uid")
	sql := "SELECT * FROM users where id="+uid
	rows, err := db.Query(sql)
	if err != nil{
		return nil, err
	}
	defer rows.Close()
	var data []User
	var user = User{}
	for rows.Next(){
		err = rows.Scan(&user.Id, &user.Name)
		if err != nil{
			return nil, err
		}
		data = append(data,user)
	}
	return data,nil

}
func SafeGetData(r *http.Request)([]User, error){
	db, err := database.Connect()
	if err != nil{
		return nil,err
	}
	defer db.Close()
	//get data from clien
	uid := r.URL.Query().Get("uid")
	sql := uid
	fmt.Println(sql)
	rows, err := db.Query(sql)
	if err != nil{
		return nil, err
	}
	defer rows.Close()
	var data []User
	var user = User{}
	for rows.Next(){
		err = rows.Scan(&user.Id, &user.Name)
		if err != nil{
			return nil, err
		}
		data = append(data,user)
	}
	return data,nil

}