package sqli

import(
	"log"
	"fmt"
	"database/sql"

	"govwa/util/database"
)

var DB *sql.DB

func init(){
	DB, _ = database.Connect()
	/* if err != nil{
		log.Println(err.Error())
	} */
}

type Profile struct{
	Uid int
	Name string
	City string
	PhoneNumber string
}

func newProfile()*Profile{
	return &Profile{}
}

func(p *Profile)unsafeQueryGetData(uid string)error{

	/* this funciton use to get data Profile from database with vulnerable query */

	getProfileSql := fmt.Sprintf(`SELECT p.user_id, p.full_name, p.city, p.phone_number 
								FROM Profile as p,Users as u 
								where p.user_id = u.id 
								and u.id=%s`,uid) //here is the vulnerable query
	
	rows, err := DB.Query(getProfileSql)
	if err != nil{
		log.Printf("query error :%s",err.Error())
		return err  //this will return error query to clien hmmmm.
	}
	defer rows.Close()
	//var profile = Profile{}
	for rows.Next(){
		err = rows.Scan(&p.Uid,&p.Name,&p.City,&p.PhoneNumber)
		if err != nil{
			log.Printf("Row scan error: %s", err.Error())
			return err
		}
	}
	return nil
}

