name: GO Security Checks
on:
  pull_request:
    branches:
      - master
      - main
  push:
    branches:
      - master
      - main

jobs:
  # https://github.com/securego/gosec
  gosec_job:
    runs-on: ubuntu-latest
    name: Run gosec
    env:
      GO111MODULE: on
    steps:
      - name: Checkout Code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      - name: Run Gosec Security Scanner
        uses: securego/gosec@26e57d6b340778c2983cd61775bc7e8bb41d002a
        with:
          args: "-quiet -fmt html -out gosec.html ./..."
      - name: Gosec Findings
        if: always()
        run: |
          IFS=$'\n'

          function gosec_report() {
              gosec_findings=$(cat gosec.html | grep 'var data' | sed 's+var data =++g' | sed 's+;$++g' | jq '.Issues[] | {"severity": .severity, "confidence": .confidence, "details": .details, "file": .file, "code": .code, "line": .line}')

              for finding in $(echo "${gosec_findings}" | jq -c '.')
              do 
                  severity=$(echo "${finding}" | jq '.severity')
                  confidence=$(echo "${finding}" | jq '.severity')
                  details=$(echo "${finding}" | jq '.details')
                  file=$(echo "${finding}" | jq '.file')
                  code=$(echo "${finding}" | jq '.code')
                  line=$(echo "${finding}" | jq '.line')

                  echo "/-------------------------------------------------------------------/"
                  echo "details:      ${details}"
                  echo "severity:     ${severity}"
                  echo "confidence:   ${confidence}"
                  echo "file:         ${file}"
                  echo "line:         ${line}"
                  echo -e "code:         \n${code}\n"
                  echo ""
              done

              echo "Total Findings: $(echo ${gosec_findings} | jq -s 'length')"
          }

          gosec_report

      # Upload gosec.html report as an artifact
      - uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3
        if: always()
        with:
          name: gosec html report
          path: ./gosec.html

  # https://github.com/golang/govulncheck-action
  # Govulncheck requires Go version 1.18 or later - https://pkg.go.dev/golang.org/x/vuln/cmd/govulncheck
  govulncheck_job:
    runs-on: ubuntu-latest
    name: Run govulncheck
    steps:
      - id: govulncheck
        uses: golang/govulncheck-action@7da72f730e37eeaad891fcff0a532d27ed737cd4
        with:
          go-version-file: ./go.mod
          go-package: ./...

  # https://github.com/Checkmarx/chainjacking
  chainjacking_job:
    runs-on: ubuntu-latest
    name: Run chainjacking
    steps:
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      - name: Setup Python for Chainjacking Tool
        uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d
        with:
          python-version: "3.9"
      - name: ChainJacking check
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          python -m pip install -q chainjacking
          python -m chainjacking -gt $GITHUB_TOKEN
