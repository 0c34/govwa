name: Security Checks

on:
  pull_request:
  push:
    branches:
      - master
      
jobs:
  gosec_job:
    runs-on: ubuntu-latest
    permissions:
      # required for all workflows
      security-events: write
    name: Run gosec
    env:
      GO111MODULE: on
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          # we let the report trigger content trigger a failure using the GitHub Security features.
          args: '-no-fail -fmt html -out results.html  -stdout *.go ./...'
      - uses: actions/upload-artifact@v4
        with:
          name: my-artifact
          path: ./results.html
  govulncheck_job:
    runs-on: ubuntu-latest
    name: Run govulncheck
    steps:
      - id: govulncheck
        uses: golang/govulncheck-action@v1
        with:
           go-version-input: 1.22.2
           go-package: ./...
  chainjacking_job:
    runs-on: ubuntu-latest
    name: Run chainjacking
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: ChainJacking tool test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python -m pip install -q chainjacking
          python -m chainjacking -gt $GITHUB_TOKEN
